name: Build macOS and Windows App

on:
  workflow_dispatch:
  
  push:
    branches:
      - main
    paths:
      - package.json

jobs:
  build_mac:
    runs-on: macos-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: |
          npm install

      # Step 4: Extract Version from package.json
      - name: Extract Version
        id: version
        run: echo "VERSION=$(node -p -e "require('./package.json').version")" >> $GITHUB_ENV

      # Step 5: Build the App
      - name: Build Electron App
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          npm run dist

      # Step 6: Upload the Artifact
      - name: Create a GitHub release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"
          name: "${{ env.VERSION }}"
          prerelease: false  # Mark as latest
          files: |
            dist/*
        env:
            GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  build_win:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: |
          npm install

      # Step 4: Extract Version from package.json
      - name: Extract Version
        id: version
        run: echo "VERSION=$(node -p -e "require('./package.json').version")" >> $GITHUB_ENV

      # Step 5: Build the App
      - name: Build Electron App
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          npm run dist

      # Step 6: Upload the Artifact
      - name: Create a GitHub release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"
          name: "${{ env.VERSION }}"
          prerelease: false  # Mark as latest
          files: |
            dist/*
        env:
            GITHUB_TOKEN: ${{ secrets.GH_PAT }}
